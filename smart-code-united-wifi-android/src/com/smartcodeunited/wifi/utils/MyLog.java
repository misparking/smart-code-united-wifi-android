package com.smartcodeunited.wifi.utils;import java.io.BufferedWriter;import java.io.FileNotFoundException;import java.io.FileWriter;import java.io.IOException;import android.util.Log;/** * 类描述：日志工具类 */public final class MyLog {		private static  boolean DEBUG=true;		public static void setDebug(boolean isDebug){		DEBUG = isDebug;	}	private MyLog() {		}		public static void e(Object obj, String msg) {		if (DEBUG) Log.e(obj.getClass().getSimpleName(), msg);	}	public static void i(Object obj, String msg) {		if (DEBUG) Log.i(obj.getClass().getSimpleName(), msg);	}	public static void d(Object obj, String msg) {		if (DEBUG) Log.d(obj.getClass().getSimpleName(), msg);	}	public static void w(Object obj, String msg) {		if (DEBUG) Log.w(obj.getClass().getSimpleName(), msg);	}	public static void v(Object obj, String msg) {		if (DEBUG) 	Log.v(obj.getClass().getSimpleName(), msg);	}/***************************************************/	public static void e(String TAG, String msg) {		if (DEBUG) Log.e(TAG, msg);	}	public static void i(String TAG, String msg) {		if (DEBUG) Log.i(TAG, msg);	}	public static void d(String TAG, String msg) {		if (DEBUG) Log.d(TAG, msg);	}	public static void w(String TAG, String msg) {		if (DEBUG) Log.w(TAG, msg);	}	public static void v(String TAG, String msg) {		if (DEBUG) Log.v(TAG, msg);	}		public static void e(String tag, String msg, Throwable t) {		if (DEBUG) {			Log.e(tag, msg,t);		}	}	/**	 * 打印log到文件中	 *	 * @param logPath  日志文件路径	 * @param logData  日志内容	 * @param override 是否覆盖文件内容	 */	public static void f(String logPath, String logData, boolean override) {		BufferedWriter writer = null;		try {			writer = new BufferedWriter(new FileWriter(logPath, !override));			if (!override) {				writer.append(logData);			} else {				writer.write(logData);			}			writer.newLine();		} catch (FileNotFoundException e) {			e(new MyLog(), e.toString());		} catch (IOException e) {			e(new MyLog(), e.toString());		} finally {			try {				if (writer != null) {					writer.flush();					writer.close();				}			} catch (Exception e2) {				e(new MyLog(), e2.toString());			}		}	}}